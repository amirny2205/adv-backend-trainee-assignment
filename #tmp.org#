docker run -dit --name postgres_01 -e POSTGRES_PASSWORD=q --ip 172.17.0.5 postgres


    python manage.py makemigrations && \
    python manage.py migrate
должны запуститься после базы

ENV_FILE


* cmd Dockerfile_django
Внутри директории с докеромфайлом, запускаем:
docker build -t abta:latest -f Dockerfile_django --build-arg REPO_DIR=D:\tmp_02\adv-backend-trainee-assignment .
docker run -dit -p 8000:8000 --name=abta_01 --env-file=D:\django\adv-backend-trainee-assignment\.env_example abta

* cmd Dockerfile_postgres
docker run -dit --name postgres_01 -e POSTGRES_PASSWORD=asd;'kljasd;l -e POSTGRES_DB=adv_backend_trainee_assignment --ip 172.17.0.5 postgres
* bk_01
FROM debian:latest

COPY ${REPO_DIR} /root/

RUN cd ~ && \
    apt-get update && \
    apt-get -y install git python3 python3-pip python3-venv build-essential libssl-dev libffi-dev python-dev libpq-dev	  cd /adv-backend-trainee-assignment && \
    pip3 install -r requirements.txt && \
    cp .env_example .env

WORKDIR /root/adv_backend_trainee_assignment/
ENTRYPOINT python3 manage.py runserver 0:8000

COPY ${ENV_FILE} /root/adv-backend-trainee-assignment/.env

* testr
1) COPY не копирует саму папку | да при чем при заданной папке он потрошит её контент сразу, без /* . COPY_FILES_FROM лучше назвать
2) workdir требует слеш на конце | не требует
* tmp
172.17.0.2
